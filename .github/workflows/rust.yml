name: CI/CD Pipeline

on:
  push:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      job_to_run:
        description: "Choose job to run"
        type: choice
        options:
          - release
          - documentation
          - deploy
        default: release

env:
  CARGO_TERM_COLOR: always

jobs:
  all:
    if: github.event_name == 'push'
    strategy:
      matrix:
        toolchain: [stable, beta, nightly]
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Install Rust toolchain
      - name: Install Rust
        run: >
          rustup update ${{ matrix.toolchain }} &&
          rustup default ${{ matrix.toolchain }} &&
          rustup component add clippy &&
          rustup component add rustfmt

      # Run Clippy (linting)
      - name: Run Clippy
        run: cargo clippy --all-targets -- -D warnings

      # Check code formatting
      - name: Check formatting
        run: cargo fmt --all --check

      # build in debug mode
      - name: Build
        run: cargo build --verbose

      # Run tests
      - name: Run tests
        run: cargo test --verbose

  release:
    # needs: all
    if: github.event_name == 'workflow_dispatch' and inputs.job_to_run == 'release'

    strategy:
      matrix:
        toolchain: [stable, beta, nightly]
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Install Rust toolchain
      - name: Install Rust
        run: >
          rustup update ${{ matrix.toolchain }} &&
          rustup default ${{ matrix.toolchain }} &&
          rustup component add clippy &&
          rustup component add rustfmt

      # build in release mode
      - name: Build
        run: cargo build --release

  documentation:
    if: github.event_name == 'workflow_dispatch' and inputs.job_to_run == 'documentation'

    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Install Rust toolchain
      - name: Install Rust
        run: >
          rustup update ${{ matrix.toolchain }} &&
          rustup default ${{ matrix.toolchain }}

      - name: Generate
        run: |
          cargo doc --no-deps --document-private-items

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: rust-docs
          path: target/doc
