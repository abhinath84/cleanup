name: Bump Version
# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      version:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Semver type of new version (major / minor / patch)'
        # Input has to be provided for the workflow to run
        required: true
        type: choice
        options: 
        - patch
        - minor
        - major

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "bump-version"
  bump-version:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Check out the content (source branch). Use a deploy key so that
    # when we push changes, it will trigger the release workflow
    # run that runs on: tag. (Using the GitHub token would
    # not run the workflow to prevent infinite recursion.)
    - name: Check out source
      uses: actions/checkout@v4
      with:
        ssh-key: ${{ secrets.DEPLOY_KEY }}
        # Fetch all history for determining proper version
        fetch-depth: 0
        
    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        
    - name: Install cargo-bump
      run: cargo install cargo-bump
      
    - name: Setup Git
      run: |
        git config user.name 'Abhishek Nath'
        git config user.email 'abhi.nath@outlook.com'
        # Uncomment below for signed tags
        # git config gpg.format ssh
        # git config user.signingKey 'YOUR_SSH_KEY_HERE'
        
    - name: Bump version in Cargo.toml
      run: cargo bump ${{ github.event.inputs.version }}
      
    - name: Get new version
      id: get_version
      run: echo "VERSION=$(grep -m1 'version =' Cargo.toml | cut -d '"' -f 2)" >> $GITHUB_OUTPUT
      
    - name: Commit changes
      run: |
        git add Cargo.toml
        git commit -m "Bump version to v${{ steps.get_version.outputs.VERSION }}"
        
    - name: Create annotated tag
      # Create an annotated tag for the new version
      run: git tag -a "v${{ steps.get_version.outputs.VERSION }}" -m "Version ${{ steps.get_version.outputs.VERSION }}"
      # Uncomment below for signed tags
      # run: git tag -s "v${{ steps.get_version.outputs.VERSION }}" -m "Version ${{ steps.get_version.outputs.VERSION }}"
      
    - name: Push changes and tags
      run: git push origin main --follow-tags
